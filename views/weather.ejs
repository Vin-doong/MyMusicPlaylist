<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>현재 날씨에 따른 추천 플레이리스트</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
  </head>
  <body>
    <!-- 헤더 -->
    <%- include('partials/header'); %>

    <div class="container text-center mt-5">
      <h1>현재 위치 날씨에 따른 추천 플레이리스트</h1>

      <!-- 위치 요청 버튼 -->
      <div class="mt-4">
        <button id="getLocation" class="btn btn-outline-info">추천 플레이리스트 보기</button>
      </div>

      <!-- 로딩 메시지 -->
      <div id="loadingMessage" class="mt-4 text-info d-none">
        데이터를 가져오는 중입니다. 잠시만 기다려주세요...
      </div>

      <!-- 오류 메시지 -->
      <div id="errorMessage" class="mt-4 text-danger d-none"></div>

      <!-- 결과 표시 -->
      <div id="results" class="mt-5"></div>
    </div>

    <script>
      const button = document.getElementById("getLocation");
      const loadingMessage = document.getElementById("loadingMessage");
      const errorMessage = document.getElementById("errorMessage");
      const resultsDiv = document.getElementById("results");

      // 위치 요청 버튼 클릭 이벤트
      button.addEventListener("click", () => {
        loadingMessage.classList.remove("d-none");
        errorMessage.classList.add("d-none");
        resultsDiv.innerHTML = '';

        // 위치 정보 요청
        navigator.geolocation.getCurrentPosition(success, fail);
      });

      // 위치 요청 성공 시 처리
      const success = async (position) => {
        const lat = position.coords.latitude;
        const lon = position.coords.longitude;

        try {
          // 서버로 위치 데이터 전달
          const response = await fetch('/main/weather', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ lat, lon }),
          });

          if (!response.ok) {
            throw new Error('서버 응답 실패');
          }

          const data = await response.json();
          loadingMessage.classList.add("d-none");

          // 결과 렌더링
          if (data && data.length > 0) {
            renderResults(data);
          } else {
            resultsDiv.innerHTML = '<p class="text-muted">추천 플레이리스트를 찾을 수 없습니다.</p>';
          }
        } catch (error) {
          console.error("요청 실패:", error);
          showError("데이터를 가져오지 못했습니다. 다시 시도해주세요.");
        }
      };

      // 위치 요청 실패 시 처리
      const fail = () => {
        loadingMessage.classList.add("d-none");
        showError("위치 정보를 가져올 수 없습니다. 위치 권한을 확인해주세요.");
      };

      // 오류 메시지 표시
      const showError = (message) => {
        errorMessage.textContent = message;
        errorMessage.classList.remove("d-none");
      };

      // 결과 렌더링
      const renderResults = (tracks) => {
        resultsDiv.innerHTML = '';
        tracks.forEach((track) => {
          const trackDiv = document.createElement("div");
          trackDiv.innerHTML = `
            <div class="card mt-3" style="max-width: 540px; margin: 0 auto;">
              <div class="row g-0">
                <div class="col-md-4">
                  <img src="${track.album.images[0]?.url}" class="img-fluid rounded-start" alt="${track.name}">
                </div>
                <div class="col-md-8">
                  <div class="card-body">
                    <h5 class="card-title">${track.name}</h5>
                    <p class="card-text">아티스트: ${track.artists.map((artist) => artist.name).join(', ')}</p>
                    <a href="${track.external_urls.spotify}" target="_blank" class="btn btn-primary">Spotify에서 보기</a>
                  </div>
                </div>
              </div>
            </div>
          `;
          resultsDiv.appendChild(trackDiv);
        });
      };
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
